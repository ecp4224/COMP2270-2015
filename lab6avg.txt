LOAD R1, 0x0 #Load the size of the array
MOV R6, 1 #Set R5 to 1 for adding the counter
MOV R8, 2 #Set R8 to 2 for adding to current address
MOV R2, 0x2 #Set the current address to 0x2
ADD R3, R2, R0 #Set R3 = R2
LOAD R3 #Replace R3 with the value of the address it currently equals
ADD R4, R4, R3 #Do R4 = R4 + R3
ADD R5, R5, R6 #Add 1 to R5
ADD R2, R2, R8 #Add 2 bytes to R2
SUB R7, R1, R5 #Do R7 = R1 - R5
JZE R7, 12 #If R7 equals 0, then we reached the end of the list
JZN R7, 4 #If R7 doesn't equal 0, then go back to line 4 and repeat the process
DIV R9, R4, R1 #Set R9 to the average (R4 / R1) or (sum / count)
STOR R9, 0x0 #Store the final answer to R9